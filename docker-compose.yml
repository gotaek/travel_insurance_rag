services:
  redis:
    image: redis:7-alpine
    container_name: insurance-rag-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  api:
    build:
      context: .
    container_name: insurance-rag-api
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./:/app  # 개발 편의: 소스 실시간 반영
      - eval_data:/app/eval/out  # eval 결과 데이터 영구 저장
    command: >
      uvicorn app.main:app
      --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379
      - EVAL_OUTPUT_DIR=/app/eval/out
    depends_on:
      redis:
        condition: service_healthy

  ui:
    build:
      context: .
    container_name: insurance-rag-ui
    ports:
      - "8501:8501"
    depends_on:
      - api
    volumes:
      - ./:/app
    command: >
      streamlit run ui/app.py
      --server.port 8501
      --server.address 0.0.0.0
    environment:
      - API_BASE_URL=http://api:8000
      - PYTHONPATH=/app
    restart: unless-stopped

volumes:
  redis_data:
  eval_data:  # eval 결과 데이터 영구 저장